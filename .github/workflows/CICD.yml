name: Flaq CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Prepare Cache
        uses: actions/cache@v4

        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ os-runner }}-cargo-cache

      #      - name: Install stable toolchain
      #        uses: actions-rs/toolchain@v1
      #        with:
      #          toolchain: stable
      #          override: true

      - name: Install cargo tarpaulin
        run: cargo install cargo-tarpaulin

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}

      - name: Run Tests (using tarpaulin)
        run: cargo test
        
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Clippy Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features


  #  build:
  #    runs-on: ubuntu-latest
  #    steps:
  #    - uses: actions/checkout@v4
  #    - name: Build
  #      run: cargo build --verbose
  #    - name: Run tests
  #      run: cargo test --verbose
